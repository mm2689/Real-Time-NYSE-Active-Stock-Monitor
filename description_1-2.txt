The chosen approach uses Python for data scraping and PHP for web presentation, leveraging the strengths of each language.
Python is utilized for its excellent libraries for web scraping (requests and BeautifulSoup) and database interaction (pymongo). The Python script fetches and processes the stock data from the NYSE and then stores it in MongoDB. This part of the solution is responsible for the regular updating of stock data, ensuring the web page presents the latest information without duplicating entries.
PHP is employed to create a dynamic web page that displays the stock data stored in MongoDB. It retrieves the data, constructs an HTML table, and implements sorting functionality. Users can sort the table by clicking on column headers, which sends a request to the PHP script to fetch and reorder the data accordingly.
This two-pronged approach efficiently separates the backend data handling from the frontend user interface, offering a clear structure where each script has a distinct role Python manages data acquisition, while PHP takes care of the data display and user interactions.
